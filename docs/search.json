[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "Import data from first sheet using readxl package.\n\n\nlibrary(readxl)\nwhite_wine_data &lt;- read_excel(\"../white-wine.xlsx\")\nprint(white_wine_data)\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRead in the data from the 2nd sheet.\n\n\nvariables &lt;- read_excel(\"../white-wine.xlsx\", \n                            sheet = excel_sheets(\"../white-wine.xlsx\")[2])\nvariables\n\n# A tibble: 12 × 1\n   Variables           \n   &lt;chr&gt;               \n 1 fixed_acidity       \n 2 volatile_acidity    \n 3 citric_acid         \n 4 residual_sugar      \n 5 chlorides           \n 6 free_sulfur_dioxide \n 7 total_sulfur_dioxide\n 8 density             \n 9 pH                  \n10 sulphates           \n11 alcohol             \n12 quality             \n\n\n\nRename variables with backticks and add type variable.\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n  white_wine_data&lt;-white_wine_data %&gt;%\n  rename(\"fixed_acidity\"=`fixed acidity`,\n         \"volatile_acidity\"=`volatile acidity`,\n         \"citric_acid\"=`citric acid`,\n         \"residual_sugar\"=`residual sugar`,\n         \"free_sulfur_dioxide\"=`free sulfur dioxide`,\n         \"total_sulfur_dioxide\"=`total sulfur dioxide`,\n         ) |&gt; mutate(\"type\"=\"white\")\n\n\nRead the red wine csv\n\n\nlibrary(readr)\nred_wine_data &lt;-read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",show_col_types =FALSE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\nred_wine_data\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                    &lt;dbl&gt; &lt;chr&gt;    \n 1              74 0.7                0                           19 0.076    \n 2              78 0.88               0                           26 0.098    \n 3              78 0.76               0.04                        23 0.092    \n 4             112 0.28               0.56                        19 0.075    \n 5              74 0.7                0                           19 0.076    \n 6              74 0.66               0                           18 0.075    \n 7              79 0.6                0.06                        16 0.069    \n 8              73 0.65               0                           12 0.065    \n 9              78 0.58               0.02                         2 0.073    \n10              75 0.5                0.36                        61 0.071    \n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;chr&gt;, pH &lt;dbl&gt;, sulphates &lt;chr&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nchange character data types to numeric\n\n\nred_wine_data &lt;- red_wine_data %&gt;%\n  mutate(across(where(is.character), as.numeric))\n\n\nRename variables with backticks and add type variable\n\n\nred_wine_data&lt;-red_wine_data %&gt;%\n  rename(\"fixed_acidity\"=`fixed acidity`,\n         \"volatile_acidity\"=`volatile acidity`,\n         \"citric_acid\"=`citric acid`,\n         \"residual_sugar\"=`residual sugar`,\n         \"free_sulfur_dioxide\"=`free sulfur dioxide`,\n         \"total_sulfur_dioxide\"=`total sulfur dioxide`,\n         ) |&gt; mutate(\"type\"=\"red\")\n\n\nCombine the two data sets.\nfilter, sort, select, mutate and sort the combined data set\n\n\ndplyr::bind_rows(white_wine_data,red_wine_data)|&gt; filter(quality &gt;6.5,alcohol &lt;132)|&gt;arrange(desc(quality))|&gt;select(citric_acid, alcohol, type, quality)|&gt;group_by(quality) |&gt;mutate(across(alcohol,list(mean=mean,sd=sd),.names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,198 × 6\n# Groups:   quality [3]\n   citric_acid alcohol type  quality alcohol_mean alcohol_sd\n         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n 1        0.45     104 white       9         122.       10.1\n 2        0.29     124 white       9         122.       10.1\n 3        0.36     125 white       9         122.       10.1\n 4        0.34     127 white       9         122.       10.1\n 5        0.49     129 white       9         122.       10.1\n 6        0.48     128 white       8         102.       36.8\n 7        0.48     128 white       8         102.       36.8\n 8        0.42     105 white       8         102.       36.8\n 9        0.31     107 white       8         102.       36.8\n10        0.31     107 white       8         102.       36.8\n# ℹ 1,188 more rows",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "“1. ../MyData.csv”.\n\n\n“2. The major benefit of R project is that it provides an easy way to divide work into mutliple contexts. Each project can have their own Working Directory,Workspace,History,Folder sturcture and source documents. so it is really easy to organize your work.”\n\n\n“3. Git: is a version control software while, Github: is an online hosting service for Git-based projects.”\n\n\n“4. A tibble, a special type of data frame used by the tidyverse to avoid some common gotchas. The most important difference between tibbles and data frames is the way tibbles print; they are designed for large datasets, so they only show the first few rows and only the columns that fit on one screen.”\n\n\n“5. library(dplyr) as_tibble(iris)|&gt; select(starts_with(”Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)”",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "An example pages site with multiple pages and a table of contents.\nThis could be a landing page for the site. Feel free to put whatever here!",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "Task 2 Reading Delimited Data\n\nRead data, add column name and print out tibble\n\n\nlibrary(readr)\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/online/datasets/glass.data\",\ncol_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\",\"Type_of_glass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n\nRewrite variable “Type_of_glass” values\nFilter for Fe &lt;0.2 and glass type “tableware” and “headlamps”\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nglass_data|&gt;\n  mutate(Type_of_glass=if_else(Type_of_glass == 1, \"building_windows_float_processed\", \n if_else(Type_of_glass == 2, \"building_windows_non_float_processed\",\n         if_else(Type_of_glass == 3, \"vehicle_windows_float_processed\",\n                 if_else(Type_of_glass == 4, \"vehicle_windows_non_float_processed\",\n                         if_else(Type_of_glass == 5, \"containers\",\n                                 if_else(Type_of_glass == 6, \"tableware\",\n                                         if_else(Type_of_glass == 7, \"headlamps\",\n                                                         as.character(Type_of_glass))))))))) |&gt; \n  filter(Fe &lt; 0.2,Type_of_glass %in% c(\"tableware\", \"headlamps\"))|&gt;print()\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\nYeast Data\nRead data, add column name and print out tibble\n\n\nyeast_data &lt;- read_fwf(file=\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\", fwf_widths(c(10,4,4,4,4,4,4,4,4,3),c(\"seq_name\",\"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\",\"class\")))\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (3): seq_name, erl, nuc\ndbl (7): mcg, gvh, alm, mit, pox, vac, class\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n  yeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit erl     pox   vac nuc   class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;\n 1 ADT1_YEAST     0    58  0.61     0 47     0.13     0 50      0  \n 2 ADT2_YEAST     0    43  0.67     0 48     0.27     0 50      0  \n 3 ADT3_YEAST     0    64  0.62     0 49     0.15     0 50      0  \n 4 AAR2_YEAST     0    58  0.44     0 57     0.13     0 50      0  \n 5 AATM_YEAST     0    42  0.44     0 48     0.54     0 50      0  \n 6 AATC_YEAST     0    51  0.4      0 56     0.17     0 50      0.5\n 7 ABC1_YEAST     0    50  0.54     0 48     0.65     0 50      0  \n 8 BAF1_YEAST     0    48  0.45     0 59     0.2      0 50      0  \n 9 ABF2_YEAST     0    55  0.5      0 66     0.36     0 50      0  \n10 ABP1_YEAST     0    40  0.39     0 60     0.15     0 50      0  \n# ℹ 1,474 more rows\n\n\n\nRemove columns, add mean and median to the numeric columns and group by class\n\n\nlibrary(dplyr)\nyeast_data |&gt; select(-c(seq_name,nuc))|&gt; group_by(class)|&gt;  mutate(across(where(is.numeric),list(mean=mean,median=median), .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 20\n# Groups:   class [3]\n     mcg   gvh   alm   mit erl     pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1     0    58  0.61     0 47     0.13     0   0   0.000681          0     49.9\n 2     0    43  0.67     0 48     0.27     0   0   0.000681          0     49.9\n 3     0    64  0.62     0 49     0.15     0   0   0.000681          0     49.9\n 4     0    58  0.44     0 57     0.13     0   0   0.000681          0     49.9\n 5     0    42  0.44     0 48     0.54     0   0   0.000681          0     49.9\n 6     0    51  0.4      0 56     0.17     0   0.5 0                 0     45.2\n 7     0    50  0.54     0 48     0.65     0   0   0.000681          0     49.9\n 8     0    48  0.45     0 59     0.2      0   0   0.000681          0     49.9\n 9     0    55  0.5      0 66     0.36     0   0   0.000681          0     49.9\n10     0    40  0.39     0 60     0.15     0   0   0.000681          0     49.9\n# ℹ 1,474 more rows\n# ℹ 9 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;,\n#   vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html#task-1-conceptual-questions",
    "href": "pages/concepts.html#task-1-conceptual-questions",
    "title": "Conceptual Questions",
    "section": "",
    "text": "“1. ../MyData.csv”.\n\n\n“2. The major benefit of R project is that it provides an easy way to divide work into mutliple contexts. Each project can have their own Working Directory,Workspace,History,Folder sturcture and source documents. so it is really easy to organize your work.”\n\n\n“3. Git: is a version control software while, Github: is an online hosting service for Git-based projects.”\n\n\n“4. A tibble, a special type of data frame used by the tidyverse to avoid some common gotchas. The most important difference between tibbles and data frames is the way tibbles print; they are designed for large datasets, so they only show the first few rows and only the columns that fit on one screen.”\n\n\n“5. library(dplyr) as_tibble(iris)|&gt; select(starts_with(”Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)”",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "pages/combining.html#task-3-combining-excel-and-delimited-data",
    "href": "pages/combining.html#task-3-combining-excel-and-delimited-data",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "Import data from first sheet using readxl package.\n\n\nlibrary(readxl)\nwhite_wine_data &lt;- read_excel(\"../white-wine.xlsx\")\nprint(white_wine_data)\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRead in the data from the 2nd sheet.\n\n\nvariables &lt;- read_excel(\"../white-wine.xlsx\", \n                            sheet = excel_sheets(\"../white-wine.xlsx\")[2])\nvariables\n\n# A tibble: 12 × 1\n   Variables           \n   &lt;chr&gt;               \n 1 fixed_acidity       \n 2 volatile_acidity    \n 3 citric_acid         \n 4 residual_sugar      \n 5 chlorides           \n 6 free_sulfur_dioxide \n 7 total_sulfur_dioxide\n 8 density             \n 9 pH                  \n10 sulphates           \n11 alcohol             \n12 quality             \n\n\n\nRename variables with backticks and add type variable.\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n  white_wine_data&lt;-white_wine_data %&gt;%\n  rename(\"fixed_acidity\"=`fixed acidity`,\n         \"volatile_acidity\"=`volatile acidity`,\n         \"citric_acid\"=`citric acid`,\n         \"residual_sugar\"=`residual sugar`,\n         \"free_sulfur_dioxide\"=`free sulfur dioxide`,\n         \"total_sulfur_dioxide\"=`total sulfur dioxide`,\n         ) |&gt; mutate(\"type\"=\"white\")\n\n\nRead the red wine csv\n\n\nlibrary(readr)\nred_wine_data &lt;-read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",show_col_types =FALSE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\nred_wine_data\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                    &lt;dbl&gt; &lt;chr&gt;    \n 1              74 0.7                0                           19 0.076    \n 2              78 0.88               0                           26 0.098    \n 3              78 0.76               0.04                        23 0.092    \n 4             112 0.28               0.56                        19 0.075    \n 5              74 0.7                0                           19 0.076    \n 6              74 0.66               0                           18 0.075    \n 7              79 0.6                0.06                        16 0.069    \n 8              73 0.65               0                           12 0.065    \n 9              78 0.58               0.02                         2 0.073    \n10              75 0.5                0.36                        61 0.071    \n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;chr&gt;, pH &lt;dbl&gt;, sulphates &lt;chr&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nchange character data types to numeric\n\n\nred_wine_data &lt;- red_wine_data %&gt;%\n  mutate(across(where(is.character), as.numeric))\n\n\nRename variables with backticks and add type variable\n\n\nred_wine_data&lt;-red_wine_data %&gt;%\n  rename(\"fixed_acidity\"=`fixed acidity`,\n         \"volatile_acidity\"=`volatile acidity`,\n         \"citric_acid\"=`citric acid`,\n         \"residual_sugar\"=`residual sugar`,\n         \"free_sulfur_dioxide\"=`free sulfur dioxide`,\n         \"total_sulfur_dioxide\"=`total sulfur dioxide`,\n         ) |&gt; mutate(\"type\"=\"red\")\n\n\nCombine the two data sets.\nfilter, sort, select, mutate and sort the combined data set\n\n\ndplyr::bind_rows(white_wine_data,red_wine_data)|&gt; filter(quality &gt;6.5,alcohol &lt;132)|&gt;arrange(desc(quality))|&gt;select(citric_acid, alcohol, type, quality)|&gt;group_by(quality) |&gt;mutate(across(alcohol,list(mean=mean,sd=sd),.names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,198 × 6\n# Groups:   quality [3]\n   citric_acid alcohol type  quality alcohol_mean alcohol_sd\n         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n 1        0.45     104 white       9         122.       10.1\n 2        0.29     124 white       9         122.       10.1\n 3        0.36     125 white       9         122.       10.1\n 4        0.34     127 white       9         122.       10.1\n 5        0.49     129 white       9         122.       10.1\n 6        0.48     128 white       8         102.       36.8\n 7        0.48     128 white       8         102.       36.8\n 8        0.42     105 white       8         102.       36.8\n 9        0.31     107 white       8         102.       36.8\n10        0.31     107 white       8         102.       36.8\n# ℹ 1,188 more rows",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  }
]